// commitlint.config.cjs
//
// -----------------------------------------------------------------------------
// НАЗНАЧЕНИЕ
// -----------------------------------------------------------------------------
// Конфигурация для проверки сообщений коммитов на соответствие принятой схеме
// оформления (Conventional Commits). Файл определяет набор правил валидации,
// специфичных для данного проекта.
//
// Формат сообщения:
//
//   <type>(<scope>)?: <subject>
//   <пустая строка>
//   <body>
//   <пустая строка>
//   <footer(s)>
//
// Справочные материалы:
// • правила commitlint: https://commitlint.js.org/#/reference-rules
// • спецификация Conventional Commits: https://www.conventionalcommits.org/
//
// -----------------------------------------------------------------------------

/** @type {import('@commitlint/types').UserConfig} */
module.exports = {
    // ----------------------------------------------------------------------------
    // 1) БАЗОВАЯ СХЕМА ПРАВИЛ
    // ----------------------------------------------------------------------------
    // Используется стандартный набор правил, основанный на спецификации.
    extends: ['@commitlint/config-conventional'],

    // ----------------------------------------------------------------------------
    // 2) ДОПОЛНИТЕЛЬНЫЕ ПРАВИЛА (УТОЧНЕНИЯ ДЛЯ ПРОЕКТА)
    // ----------------------------------------------------------------------------
    rules: {
        // --------------------------
        // HEADER (первая строка)
        // --------------------------

        // Максимальная длина заголовка (type[scope]: subject).
        // Рекомендованное значение обеспечивает удобочитаемость истории изменений.
        'header-max-length': [2, 'always', 100],

        // Тип (type) обязателен.
        'type-empty': [2, 'never'],

        // Допустимые типы коммитов. При необходимости расширяйте список
        // согласованно с командной политикой.
        'type-enum': [
            2,
            'always',
            [
                'build', // изменения инструментов сборки и конфигурации
                'chore', // служебные задачи без изменений в исходном коде/тестах
                'ci', // настройка и обновление сценариев непрерывной интеграции
                'docs', // изменения и дополнения в документации
                'feat', // добавление новой функциональности
                'fix', // исправление дефектов
                'perf', // улучшение производительности
                'refactor', // реорганизация кода без изменения поведения
                'revert', // откат ранее выполненных изменений
                'style', // косметические правки: форматирование, пробелы и т. п.
                'test', // изменения, связанные с тестированием
                'release', // коммиты, связанные с выпуском версии
                'security', // исправление уязвимостей
                'deps', // обновление зависимостей
            ],
        ],

        // Область (scope) не обязательна.
        'scope-empty': [0],

        // Формат области (scope) при наличии — использовать дефисный стиль.
        'scope-case': [2, 'always', 'kebab-case'],

        // --------------------------
        // SUBJECT (тема коммита)
        // --------------------------

        // Тема не должна быть пустой.
        'subject-empty': [2, 'never'],

        // Регистр темы: требование к нижнему регистру. Для проектов с другими
        // требованиями правило можно отключить.
        'subject-case': [2, 'always', ['lower-case']],

        // Запрет наличия точки в конце темы.
        'subject-full-stop': [2, 'never', '.'],

        // --------------------------
        // BODY / FOOTER
        // --------------------------

        // Обязательная пустая строка перед телом сообщения и перед примечаниями.
        'body-leading-blank': [2, 'always'],
        'footer-leading-blank': [2, 'always'],

        // При желании можно включить ограничения по длине строк в теле и внизу.
        // 'body-max-line-length': [2, 'always', 120],
        // 'footer-max-line-length': [2, 'always', 120],

        // При необходимости потребовать наличие ссылок на задачи в разделе footer.
        // 'references-empty': [2, 'never'],
    },

    // ----------------------------------------------------------------------------
    // 3) НАСТРОЙКИ ДЛЯ ИНТЕРАКТИВНОЙ ПОДСКАЗКИ (ПО ЖЕЛАНИЮ)
    // ----------------------------------------------------------------------------
    // Опция полезна при использовании программы командной строки, предоставляющей
    // интерактивный выбор типа и области коммита. Ниже — пример настройки.
    //
    // prompt: {
    //   settings: {
    //     // Список рекомендуемых областей для быстрого выбора
    //     scopes: ['core', 'builders', 'utils', 'types', 'docs', 'ci', 'release', 'tests'],
    //     // Подсказки для полей при интерактивном вводе
    //     messages: {
    //       type: 'Выберите тип изменения:',
    //       scope: 'Укажите область (необязательно):',
    //     },
    //   },
    // },
};
