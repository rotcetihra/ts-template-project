// cspell.config.js
// ============================================================================
// CSpell — конфигурация проверки орфографии проекта (ESM-версия)
//
// Зачем этот файл:
// 1) документирует настройки в одном месте человеческими словами;
// 2) группирует опции по смысловым блокам, чтобы не теряться в справке;
// 3) живёт в репозитории рядом с кодом и применим и в редакторе, и в CI.
//
// Как это работает:
// - Формат: JS ESM (Node 18+ или "type": "module" в package.json).
// - Редактор: расширение CSpell автоматически подхватит конфиг.
// - CLI:     `npx cspell "**/*" --no-progress` или `npx cspell --show-config`.
// - Версия схемы указывается в поле version, остальное — валидные опции CSpell.
//
// Примечания:
// - Для русского словаря требуется dev-зависимость: @cspell/dict-ru_ru
// - Пути для игнорирования сочетаются с .gitignore, если включить useGitignore.
// ============================================================================

export default {
    // ==========================================================================
    // 1) БАЗОВЫЕ НАСТРОЙКИ
    // ==========================================================================

    // Версия формата конфигурации CSpell. Актуально для обратной совместимости.
    version: '0.2',

    // Список языков через запятую. Для каждого языка подключаются соответствующие словари.
    // Примеры: "en", "en-GB", "en,ru". Порядок влияет на приоритет подсказок.
    language: 'en,ru',

    // Импорт внешних словарей. Пути указывают на JSON-расширения словарей.
    // Для русского языка нужен пакет @cspell/dict-ru_ru в devDependencies.
    import: ['@cspell/dict-ru_ru/cspell-ext.json'],

    // Учитывать правила из .gitignore как источника путей, которые не нужно проверять.
    // Аналог флага CLI --gitignore.
    useGitignore: true,

    // Включает/выключает проверку по умолчанию (можно переопределить в overrides).
    // enabled: true,

    // Ограничивает число проблем, после которого CSpell прекращает перечислять новые.
    // maxNumberOfProblems: 1000,

    // Минимальная длина слова, учитываемого в проверке (короче — игнорируются).
    // minWordLength: 3,

    // ==========================================================================
    // 2) ОБЛАСТЬ ПРОВЕРКИ И ИСКЛЮЧЕНИЯ
    // ==========================================================================

    // Пути/паттерны, исключаемые из проверки орфографии.
    ignorePaths: [
        'node_modules',
        'dist',
        'build',
        'coverage',
        'docs',
        'site',
        '.github',
        '.husky',
        // Частые кэши/артефакты разных инструментов
        '.turbo',
        '.next',
        '.cache',
        // Сжатые и производные файлы
        '**/*.d.ts',
        '**/*.map',
        '**/*.min.js',
    ],

    // Пользовательские именованные паттерны, чтобы переиспользовать их ниже.
    // Здесь задаем читаемые имена для регулярных выражений.
    patterns: [
        { name: 'urls', pattern: 'https?://\\S+' },
        { name: 'uuidsOrLongHashes', pattern: '\\b[0-9a-fA-F]{7,}\\b' },
        {
            name: 'semver',
            pattern: '\\b\\d+\\.\\d+\\.\\d+(?:-[0-9A-Za-z.-]+)?\\b',
        },
        { name: 'mdCodeBlocks', pattern: '```[\\s\\S]*?```' },
    ],

    // Регулярные выражения, участки которых следует игнорировать при проверке.
    // Можно использовать как сырые RegExp, так и ссылки по имени из patterns.
    ignoreRegExpList: [
        '#urls',
        '#uuidsOrLongHashes',
        '#semver',
        '#mdCodeBlocks',
    ],

    // ==========================================================================
    // 3) СЛОВАРИ И ЯЗЫКОВЫЕ НАСТРОЙКИ
    // ==========================================================================

    // Определения локальных словарей проекта. `addWords: true` разрешает
    // построчный формат (одно слово на строку) и игнорирует пустые строки/комментарии.
    dictionaryDefinitions: [
        {
            name: 'words',
            path: '.cspell/words.txt',
            addWords: true,
        },
        // Пример пользовательского словаря для доменных терминов:
        // { name: 'domain', path: '.cspell/domain.txt', addWords: true },
    ],

    // Список подключаемых словарей по их именам (сверху) и/или импортированных.
    dictionaries: ['words'],

    // Языковые настройки для конкретных типов файлов. Можно включать/отключать
    // отдельные флаги или менять наборы языков, чувствительность к регистру и т.п.
    languageSettings: [
        {
            // Markdown/MDX: разрешаем составные слова, чтобы уменьшить «шум» предупреждений.
            languageId: ['markdown', 'mdx'],
            allowCompoundWords: true,
            // В MD обычно полезно сохранять чувствительность к кейсу в кодовых блоках,
            // но мы отсекаем их через ignoreRegExpList, поэтому caseSensitive можно не менять.
            // caseSensitive: true,
        },
        {
            // JSON/JSONC/YAML: делаем проверку нечувствительной к регистру.
            languageId: ['json', 'jsonc', 'yaml', 'yml'],
            caseSensitive: false,
        },
        // Пример: отключить проверку в бинарных/сгенерированных форматах
        // { languageId: ['image'], enabled: false },
    ],

    // ==========================================================================
    // 4) ПОЛЬЗОВАТЕЛЬСКИЕ СЛОВА И ОГРАНИЧЕНИЯ
    // ==========================================================================

    // Явно разрешенные слова, рассматриваемые как корректные в проекте.
    // Используйте для имён собственных, терминов, аббревиатур.
    words: ['Arhitector', 'rotcetihra'],

    // Список заведомо нежелательных слов (частые опечатки). Если встречаются —
    // будут помечены как ошибки, даже если присутствуют в других словарях.
    flagWords: [
        // Пример: 'teh', 'adn'
    ],

    // Слова, которые следует игнорировать без подсветки (единоразово в конфиге).
    // ignoreWords: [],

    // ==========================================================================
    // 5) ПЕРЕОПРЕДЕЛЕНИЯ ДЛЯ ГРУПП ФАЙЛОВ (overrides)
    // ==========================================================================

    // Точечная настройка под разные форматы: включение/выключение, свои словари,
    // добавочные ignoreRegExpList и т.п.
    overrides: [
        {
            // Пример: для Markdown слегка увеличим порог «минимальной длины слова»
            // и позволим составные слова.
            filename: ['**/*.md', '**/*.mdx'],
            minWordLength: 2,
            allowCompoundWords: true,
        },
        {
            // Пример: для сгенерированных отчётов выключаем проверку.
            filename: ['coverage/**', 'reports/**'],
            enabled: false,
        },
    ],
};
