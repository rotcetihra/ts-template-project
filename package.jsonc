// package.jsonc
// ============================================================================
// package.jsonc — быстрая документация к package.json
//
// Этот файл лежит РЯДОМ с обычным package.json и служит исключительно
// для документации и ориентира по опциям. npm этот файл не читает,
// а в package.json комментарии запрещены.
//
// Назначение:
// 1) документировать файл в целом;
// 2) документировать опции по отдельности;
// 3) группировать опции в логические блоки для удобства восприятия.
//
// ! Удалите этот файл, когда полностью настроите проект.
// ============================================================================
{
    // Уникальное имя пакета (для публичных удобно использовать scope)
    "name": "@rotcetihra/ts-template-project",

    // Семантическая версия (SemVer): MAJOR.MINOR.PATCH
    "version": "0.5.0",

    // Краткое описание пакета
    "description": "Шаблонный преднастроенный TypeScript проект.",

    // Ключевые слова для поиска
    "keywords": ["template", "project", "ts", "typescript"],

    // Формат модулей пакета: ESM ("module") или CJS ("commonjs")
    "type": "module",

    // Домашняя страница/README
    "homepage": "https://github.com/rotcetihra/ts-template-project/#readme",

    // Трекер ошибок
    "bugs": "https://github.com/rotcetihra/ts-template-project/issues",

    // Лицензия (SPDX). В корне должен быть файл LICENSE
    "license": "MIT",

    // Автор пакета
    "author": {
        // Имя автора
        "name": "Arhitector",
        // Контактный email
        "email": "rotcetihra@mail.ru",
        // Страница автора
        "url": "https://github.com/rotcetihra",
    },

    // Какие файлы попадут в публикуемый пакет
    "files": ["dist", "README.md", "LICENSE"],

    // Главная точка входа (ESM) для потребителей пакета
    "main": "./dist/index.js",

    // Путь к основным типам TypeScript
    "types": "./dist/index.d.ts",

    // Публичный API пакета и под-пути импорта
    "exports": {
        // Описание корневого импорта "package-name"
        ".": {
            // Типы для корневого импорта
            "types": "./dist/index.d.ts",
            // Вход для import (ESM)
            "import": "./dist/index.js",
            // Запасной вариант по умолчанию
            "default": "./dist/index.js",
        },
        // Разрешить импорт собственного package.json инструментам
        "./package.json": "./package.json",
    },

    // Ссылка на исходный репозиторий
    "repository": {
        // Тип системы контроля версий
        "type": "git",
        // URL репозитория
        "url": "git+https://github.com/rotcetihra/ts-template-project.git",
    },

    // Скрипты разработки и обслуживания
    "scripts": {
        // Переформатировать весь проект (изменяет файлы)
        "format": "prettier -w .",
        // Проверить, что формат соответствует правилам (без изменения файлов)
        "format:check": "prettier -c .",
        // Проверка орфографии кода и документации (CSpell)
        "spell:check": "cspell lint .",
        // Базовый линт всех файлов
        "lint": "eslint .",
        // Линт с автоисправлениями
        "lint:fix": "eslint . --fix",
        // Строгий режим: ноль предупреждений
        "lint:strict": "eslint . --max-warnings=0",
        // Печать итоговой конфигурации ESLint для конкретного файла (диагностика)
        "lint:print": "eslint --print-config src/index.ts",
        // Очистить артефакты сборки и кэш TypeScript
        "src:clean": "rimraf dist .tsbuildinfo",
        // Полная сборка исходников в dist
        "src:build": "npm run src:clean && tsc -p tsconfig.build.json",
        // Проверка типов для IDE/разработки без генерации файлов
        "src:check": "tsc -p tsconfig.json --noEmit",
    },

    // Зависимости для разработки
    "devDependencies": {
        // Английский словарь для CSpell
        "@cspell/dict-en_us": "^4.4.19",
        // Русский словарь для CSpell
        "@cspell/dict-ru_ru": "^2.3.2",
        // Базовая конфигурация правил для JS (официальный пакет)
        "@eslint/js": "^9.37.0",
        // Типы Node.js для TypeScript (объявления глобальных переменных и API)
        "@types/node": "^24.7.2",
        // CLI/движок CSpell
        "cspell": "^9.2.1",
        // ESLint — основной линтер
        "eslint": "^9.37.0",
        // Набор отключений правил, мешающих Prettier
        "eslint-config-prettier": "^10.1.8",
        // Наборы глобальных переменных для разных сред (Node, браузер, Jest и т. д.)
        "globals": "^16.4.0",
        // Форматтер кода
        "prettier": "^3.6.2",
        // Кроссплатформенное удаление файлов/папок
        "rimraf": "^6.0.1",
        // Компилятор TypeScript
        "typescript": "^5.9.3",
        // Плагины и синтаксический анализатор для ESLint с поддержкой TypeScript и режима с типами
        "typescript-eslint": "^8.46.1",
    },

    // Минимально поддерживаемая версия Node.js
    "engines": {
        "node": ">=18",
    },

    // Подсказка сборщикам: импорт безопасен для tree-shaking (нет эффектов на уровне модуля)
    "sideEffects": false,

    // Настройки публикации пакета
    "publishConfig": {
        // Доступ к пакету в реестре: public/restricted
        "access": "public",
    },

    // Дополнительно:
    // "dependencies": { ... }                  // Зависимости времени выполнения
    // "peerDependencies": { ... }              // Требуемые у потребителя зависимости
    // "peerDependenciesMeta": { ... }          // Метаданные для peer-зависимостей
    // "optionalDependencies": { ... }          // Необязательные зависимости
    // "overrides": { ... }                     // Переопределение транзитивных версий (npm >=8)
    // "resolutions": { ... }                   // Задание версий (поддержка зависит от менеджера пакетов)
    // "workspaces": [ ... ]                    // Рабочие пространства (монорепозиторий)
}
